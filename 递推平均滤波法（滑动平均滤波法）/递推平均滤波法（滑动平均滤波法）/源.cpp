#include <iostream>
using namespace std;

//递推平均滤波法（又称滑动平均滤波法）
/*  N值可根据实际情况调整  */
/***************************************************
说明：把连续N个采样值看成一个队列，队列长度固定为N。
每次采样到一个新数据放入队尾，并扔掉队首的一
次数据。把队列中的N各数据进行平均运算，既获得
新的滤波结果。
优点：对周期性干扰有良好的抑制作用，平滑度高；试用于高频振荡的系统
缺点：灵敏度低；对偶然出现的脉冲性干扰的抑制作用较差，不适于脉冲干
扰较严重的场合
****************************************************/
#define N 12
int buf[N];
char i = 0;

int filter(void)
{
	char count;
	int sum = 0;
	//buf[i++] = get_val();
	if (i == N) i = 0; //当数据大于数组长度，替换数据组的一个数据  相当于环形队列更新，先进先出！
	for (count = 0; count < N; count++)
		sum += buf[count];
	return(sum / N);

}

int main(int argc, char* argv[])
{
	int A[] = { 110,90,88,95,97,99,80,90,88,91,85,94,98,88,98,100,113 };
	int n = sizeof(A) / sizeof(int);
 
	system("pause");
	return 0;
}